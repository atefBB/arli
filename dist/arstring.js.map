{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"arstring.js","sourcesContent":["/**\n * @license\n * arstring.js 0.0.1\n * https://elkebirmed.github.io/arstring\n * (c) 2015 Mohamed Elkebir <elkebir.med@gmail.com>\n * arstring may be freely distributed under the MIT license.\n */\n(function(global) {\n\n  /************************************************\n   * Private constants to use inside the library. *\n   ************************************************/\n\n  /** Regular expression patterns. */\n  var _regs = {\n    ra:   /[\\u0621-\\u0652]/g, // Arabic characters.\n    ran:  /[^\\u0621-\\u0652]/g, // Non Arabic characters.\n    ral:  /[\\u0621-\\u063A\\u0641-\\u064A]/g, // Arabic letters.\n    raln: /[^\\u0621-\\u063A\\u0641-\\u064A]/g, // Non Arabic letters.\n    ras:  /[\\u0621-\\u063A\\u0640-\\u0652]/g, // Strict Arabic characters.\n    rasn: /[^\\u0621-\\u063A\\u0640-\\u0652]/g, // Non strict Arabic characters.\n    raa:  /[\\u0600-\\u06FF]/g, // All Arabic standard characters.\n    raan: /[^\\u0600-\\u06FF]/g, // Non all Arabic.\n    rae:  /[\\u0600-\\u06FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/g, // Every Arabic characters.\n    raen: /[^\\u0600-\\u06FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/g, // Non every Arabic characters.\n    rap:  /[\\u064B-\\u0652]/g, // Arabic punctuation characters.\n    rapn: /[^\\u064B-\\u0652]/g, // Non Arabic punctuation characters.\n    rad:  /[\\u0660-\\u0669]/g, // Arabic digits.\n    radn: /[^\\u0660-\\u0669]/g, // Non Arabic digits.\n  };\n\n  /** Arabic numbers list. */\n  var _arabicNumbers = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];\n\n  /** Special Arabic characters. */\n  var _arSpecialChars = [\n    '،', // Comma.\n    '؛', // SemiColon.\n    '؟', // Question Mark.\n    '٪', // Percent Sign.\n    '٭', // Asterisk.\n    '﴿', // Right parenthesis.\n    '﴾', // Left parenthesis.\n  ];\n\n  /** Special English characters. */\n  var _enSpecialChars = [\n    ',', // Comma.\n    ';', // SemiColon.\n    '?', // Question Mark.\n    '%', // Percent Sign.\n    '*', // Asterisk.\n    ')', // Right parenthesis.\n    '(', // Left parenthesis.\n  ];\n\n  /************************************************\n   * Private functions to use inside the library. *\n   ************************************************/\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object, and it's not empty.\n   *\n   * @private\n   * @param   {*} value - A value to check.\n   * @returns {Boolean} - Returns `true` if `value` is a string, `false` otherwise.\n   */\n  function _initStr(value) {\n    return (typeof value === 'string' || value instanceof String) && value !== 'undefined' && value !== '';\n  }\n\n  /**\n   * Checks if a `option` is in the `arr` array.\n   *\n   * @private\n   * @param {Array} arr - The array to search in.\n   * @param {String} option - The option to find in the array.\n   * @return {Boolean} - Returns `true` if `option` is inside `arr`, `false` otherwise.\n   */\n  function _isIn(arr, option) {\n    return Array.isArray(arr) && arr.indexOf(option) !== -1 ? true : false;\n  }\n\n  /**\n   * Extract a specified RegExp pattern from `_regs` object.\n   *\n   * @private\n   * @param {String} [type] - A pattern to be used.\n   * @param {Boolean} [negative] - Get the nehative pattern if set to `true`.\n   * @returns {RegExp} Returns a regular expression pattern.\n   */\n  function _regType(type, negative) {\n    var result;\n\n    switch (type) {\n      case 'strict':\n        result = 'ras';\n        break;\n      case 'all':\n        result = 'raa';\n        break;\n      case 'letter':\n        result = 'ral';\n        break;\n      case 'every':\n        result = 'rae';\n        break;\n      case 'punct':\n        result = 'rap';\n        break;\n      case 'digit':\n        result = 'rad';\n        break;\n      default:\n        result = 'ra';\n    }\n\n    return negative ? _regs[result + 'n'] : _regs[result];\n  }\n\n  /****************************************************\n   * Public constants to be exported with the module. *\n   ****************************************************/\n\n  /** Used as the semantic version number. */\n  var VERSION = '0.0.1';\n\n  /****************************************************\n   * Public functions to be exported with the module. *\n   ****************************************************/\n\n  var arabize = function(str, options) {\n    if (_initStr(str)) {\n      var defaultOptions = ['date', 'number', 'dash', 'char'];\n      options = options && _isArray(options) && options.length > 0 ? options : defaultOptions;\n\n      str = _isIn(options, 'date') && !_isIn(options, 'date-reverse') ? dateize(str) : str;\n      str = _isIn(options, 'date-reverse') ? dateize(str, true) : str;\n      str = _isIn(options, 'number') || _isIn(options, 'date') || _isIn(options, 'date-reverse') ? numerize(str) : str;\n      str = _isIn(options, 'dash') && !_isIn(options, 'dasg-extra') ? removeDash(str) : str;\n      str = _isIn(options, 'dash-extra') ? removeDash(str, true) : str;\n\n      if (_isIn(options, 'char')) {\n        for (var i = 0; i < _arSpecialChars.length; i++) {\n          str = str.replace(_enSpecialChars[i], _arSpecialChars[i]);\n        }\n      }\n\n      return str;\n    } else {\n      return str;\n    }\n  };\n\n  var count = function(str, type) {\n    if (_initStr(str)) {\n      return (str.match(_regType(type)) || '').length;\n    } else {\n      return 0;\n    }\n  };\n\n  var countRest = function(str, type) {\n    if (_initStr(str)) {\n      return (str.match(_regType(type, true)) || '').length;\n    } else {\n      return 0;\n    }\n  };\n\n  var dateize = function(str, reverse) {\n    if (_initStr(str)) {\n      var regArabicDate = /\\b([\\d]{2})[\\./،]([\\d]{2})[\\./،]([\\d]{2}|[\\d]{4})\\b/g;\n      return reverse ? str.replace(regArabicDate, '$2' + '؍' + '$1' + '؍' + '$3') : str.replace(regArabicDate, '$1' + '؍' + '$2' + '؍' + '$3');\n    } else {\n      return str;\n    }\n  };\n\n  var extract = function(str, type) {\n    if (_initStr(str)) {\n      return str.replace(_regType(type, true), '');\n    } else {\n      return str;\n    }\n  };\n\n  var has = function(str, type) {\n    if (_initStr(str)) {\n      return _regType(type).test(str) ? true : false;\n    } else {\n      return false;\n    }\n  };\n\n  var how = function(str, type) {\n    if (has(str, type)) {\n      return (count(str, type) / str.length) * 100;\n    } else {\n      return 0;\n    }\n  };\n\n  var howRest = function(str, type) {\n    return 100 - how(str, type);\n  };\n\n  var numerize = function(str) {\n    if (_initStr(str)) {\n      return str.replace(/[0-9]/g, function(n) {\n        return _arabicNumbers[+n];\n      });\n    } else {\n      return str;\n    }\n  };\n\n  var remove = function(str, type) {\n    if (_initStr(str)) {\n      return str.replace(_regType(type), '');\n    } else {\n      return str;\n    }\n  };\n\n  var removeDash = function(str, extra) {\n    if (_initStr(str)) {\n      return extra ? str.replace(/ـ{2,}/g, 'ـ') : str.replace(/ـ/g, '');\n    } else {\n      return str;\n    }\n  };\n\n  var arstring = {\n    _VERSION: _VERSION,\n    arabize: arabize,\n    count: count,\n    countRest: countRest,\n    dateize: dateize,\n    extract: extract,\n    has: has,\n    how: how,\n    howRest: howRest,\n    numerize: numerize,\n    remove: remove,\n    removeDash: removeDash,\n  };\n\n  // CommonJS, AMD, script tag\n  if (typeof exports !== 'undefined') {\n    module.exports = arstring;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return arstring;\n    });\n  } else {\n    global.arstring = arstring;\n  }\n\n})(typeof global !== 'undefined' ? global : window);\n"],"sourceRoot":"/source/"}